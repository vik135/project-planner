.App {
  text-align: center;
}

.App-logo {
  height: 40vmin;
  pointer-events: none;
}

@media (prefers-reduced-motion: no-preference) {
  .App-logo {
    animation: App-logo-spin infinite 20s linear;
  }
}

.App-header {
  background-color: #282c34;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-size: calc(10px + 2vmin);
  color: white;
}

.App-link {
  color: #61dafb;
}

@keyframes App-logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}


.logout-button { 
  /* what position do we want? behavior when we scroll? */
  position: fixed; 
  bottom: 10px;
  left: 10px;
  width: 200px;
  height: 40px;
  flex-shrink: 0;
  /* text font */
  color: #626060;
  font-family: 'Nunito', sans-serif;
  font-size: 16px;
  font-style: normal;
  font-weight: 500;
  line-height: normal;

  padding: 8px 16px;
  background-color: #F7F7F5;
  border: .7px solid #626060;
  border-radius: 6px;
  cursor: pointer;

  &:hover {
    background-color: #E1E1E1;
  }

  &:active {
    background-color: #D8D7D4;
  }

}


.search-bar-div {
  position: relative;
  width: 190px; /* Adjust as needed */
  height: 44px; /* Adjust as needed */
  display: flex;
  align-items: center;
  border-radius: 10px;
  border: 3px solid #D9D9D9;
  background: #FFF;
}

.search-bar {
  flex: 1;
  padding-left: 30px; /* Space for the icon */
  border: none;
  outline: none;
  background: transparent;
  font-size: 16px; /* Adjust font size */
}

.search-icon {
  position: absolute;
  left: 5px; /* Adjust the position of the icon */
  top: 50%;
  transform: translateY(-50%);
  width: 22.194px;
  height: 24px;
  pointer-events: none; /* Ignore pointer events to let clicks pass through to input */
}

.add-list-btn {
  width: 102px;
  height: 48px;
  flex-shrink: 0;
  border-radius: 4px;
  background: #6485D9;
 
  color: #FFF;
  font-family: Nunito;
  font-size: 24px;
  font-style: normal;
  font-weight: 400;
  line-height: normal;
}

.add-list-btn:hover{
  background: #5776C5;
}

.add-list-btn:active{
  background: #3F60B5;
}

/* coloring left background panel */
.navbar-div{
  background-color: #F7F7F5;;
}


/* .container {
  display: flex; */
  /* Other container styles */
/* } */

.color-block{
  /* position: fixed; */
  height: 155px;
  width: 100%;
  background: #A1BAFA;
  top: 0; /* Positioned at the top */
  left: 0; /* Positioned at the left */
  z-index: 9999; /* Ensure it's at the top of other content */
}


.content-below-block {
  margin-top: 50px; /* Adjust this value to match the height of the color block */
}

input[type="checkbox"]{
  appearance: none;
}

.custom-checkbox {
  position: relative;
  width: 28px;
  height: 26px;
  flex-shrink: 0;
  border-radius: 8px;
  border: 2px solid #D9D9D9;
  display: inline-block; /* Ensures block-level display for the span */
  vertical-align: middle; /* Aligns checkbox with text */
}

.custom-checkbox.checked {
  border-color: transparent; /* No border for checked state */
}
/* adds the svg button  */
.custom-checkbox.checked::before {
  content: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none"><path d="M5.33333 13.3334L10.2505 17.8723C10.7022 18.2893 11.4198 18.2037 11.7608 17.6922L20 5.33337" stroke="white" stroke-width="3" stroke-linecap="round"/></svg>');
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 24px;
  height: 24px;
  background-color: #6D89D1; /* Background color for checked state */
  border-radius: 6px; /* Adjust border-radius as needed */
}

/* chat gpt how to put login button at bottom left corner, sticky? */
/* padding versus margins */ 

/* figure out how to move svg icon */

/* TODO:
- style the 'New' list button 
- navigation-panel-outer-div -- change panel color gray
- color-block div style it change color and change sizing of it -- change it so it fits the proper length to the panel
- look into custom check mark (find checkmark class name), while styling 2 separate style checked versus nonchecked
  - chat GPT how to make custom check and hide default one etc
- 
*/